/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  CondominiumAdapter,
  CondominiumAdapterInterface,
} from "../CondominiumAdapter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "manager",
        type: "address",
      },
    ],
    name: "ManagerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "QuotaChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "topicId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: true,
        internalType: "enum CondominiumLib.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "TopicChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "topic",
        type: "string",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resident",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "residenceId",
        type: "uint16",
      },
    ],
    name: "addResident",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "enum CondominiumLib.Category",
        name: "category",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "responsible",
        type: "address",
      },
    ],
    name: "addTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "closeVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "topicToEdit",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "responsible",
        type: "address",
      },
    ],
    name: "editTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getImplAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getQuota",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "openVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "residenseId",
        type: "uint16",
      },
    ],
    name: "payQuota",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resident",
        type: "address",
      },
    ],
    name: "removeResident",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "removeTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resident",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isEntering",
        type: "bool",
      },
    ],
    name: "setCounselor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "topicTitle",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "enum CondominiumLib.Options",
        name: "option",
        type: "uint8",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516125f0610066600039600081816103850152610b6a01526125f06000f3fe6080604052600436106100f35760003560e01c80638fc5dad81161008a578063b158354611610059578063b1583546146102ea578063c12e806314610313578063d50095841461032f578063eaf5d9dc1461035a576100f3565b80638fc5dad81461024657806390ca27f31461026f57806396fa1def146102985780639e1bf985146102c1576100f3565b8063597de987116100c6578063597de9871461019e5780637311ad81146101c75780637b57ee49146101f25780638da5cb5b1461021b576100f3565b80630900f010146100f857806312cb70c7146101215780631df8ba771461014a57806343b8c6b114610175575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a919061187a565b610383565b005b34801561012d57600080fd5b5061014860048036038101906101439190611a23565b6104c3565b005b34801561015657600080fd5b5061015f610645565b60405161016c9190611a8e565b60405180910390f35b34801561018157600080fd5b5061019c60048036038101906101979190611ace565b610769565b005b3480156101aa57600080fd5b506101c560048036038101906101c0919061187a565b610892565b005b3480156101d357600080fd5b506101dc6109af565b6040516101e99190611b90565b60405180910390f35b3480156101fe57600080fd5b5061021960048036038101906102149190611bab565b6109d8565b005b34801561022757600080fd5b50610230610b68565b60405161023d9190611b90565b60405180910390f35b34801561025257600080fd5b5061026d60048036038101906102689190611bab565b610b8c565b005b34801561027b57600080fd5b5061029660048036038101906102919190611c19565b610f3d565b005b3480156102a457600080fd5b506102bf60048036038101906102ba9190611cad565b61105d565b005b3480156102cd57600080fd5b506102e860048036038101906102e39190611bab565b61117d565b005b3480156102f657600080fd5b50610311600480360381019061030c9190611d27565b61130d565b005b61032d60048036038101906103289190611d67565b61142d565b005b34801561033b57600080fd5b5061034461154b565b6040516103519190611b90565b60405180910390f35b34801561036657600080fd5b50610381600480360381019061037c9190611d94565b61166f565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610411576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040890611e90565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047790611efc565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054990611f68565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312cb70c784846040518363ffffffff1660e01b81526004016105b0929190611ff6565b6000604051808303816000875af11580156105cf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105f8919061214a565b905080602001517feb10b79f28ae0b520cb7ee8e40115f547bfac852d7167a55d9ae8e028ee23a1182600001518360400151604051610638929190612193565b60405180910390a2505050565b60008073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cc90611f68565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631df8ba776040518163ffffffff1660e01b8152600401602060405180830381865afa158015610740573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076491906121c3565b905090565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef90611f68565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343b8c6b186868686866040518663ffffffff1660e01b8152600401610859959493929190612267565b600060405180830381600087803b15801561087357600080fd5b505af1158015610887573d6000803e3d6000fd5b505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091890611f68565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663597de987826040518263ffffffff1660e01b815260040161097a9190611b90565b600060405180830381600087803b15801561099457600080fd5b505af11580156109a8573d6000803e3d6000fd5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5e90611f68565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b57ee49836040518263ffffffff1660e01b8152600401610ac391906122c8565b6000604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b0b91906123ee565b905080604001516005811115610b2457610b236121f0565b5b81600001517fefe93f21a3369f1228a2589883bc377a76d7335daddc712853688de4617f82ab8360200151604051610b5c91906122c8565b60405180910390a35050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1290611f68565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638fc5dad8836040518263ffffffff1660e01b8152600401610c7791906122c8565b6000604051808303816000875af1158015610c96573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610cbf91906123ee565b905080604001516005811115610cd857610cd76121f0565b5b81600001517fefe93f21a3369f1228a2589883bc377a76d7335daddc712853688de4617f82ab8360200151604051610d1091906122c8565b60405180910390a360026005811115610d2c57610d2b6121f0565b5b81604001516005811115610d4357610d426121f0565b5b03610f3957600380811115610d5b57610d5a6121f0565b5b81606001516003811115610d7257610d716121f0565b5b03610e41577f198db6e425fb8aafd1823c6ca50be2d51e5764571a5ae0f0f21c6812e45def0b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d50095846040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e279190612437565b604051610e349190611b90565b60405180910390a1610f38565b60026003811115610e5557610e546121f0565b5b81606001516003811115610e6c57610e6b6121f0565b5b03610f37577f274a3b0d5142ec9fc4e77bd3ffc173b4e7c6c64eca73b31a6c6906b184257e7e60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631df8ba776040518163ffffffff1660e01b8152600401602060405180830381865afa158015610efd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2191906121c3565b604051610f2e9190611a8e565b60405180910390a15b5b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610fcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc390611f68565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166390ca27f383836040518363ffffffff1660e01b81526004016110279291906124ac565b600060405180830381600087803b15801561104157600080fd5b505af1158015611055573d6000803e3d6000fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036110ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e390611f68565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396fa1def83836040518363ffffffff1660e01b81526004016111479291906124eb565b600060405180830381600087803b15801561116157600080fd5b505af1158015611175573d6000803e3d6000fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361120c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120390611f68565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639e1bf985836040518263ffffffff1660e01b815260040161126891906122c8565b6000604051808303816000875af1158015611287573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906112b091906123ee565b9050806040015160058111156112c9576112c86121f0565b5b81600001517fefe93f21a3369f1228a2589883bc377a76d7335daddc712853688de4617f82ab836020015160405161130191906122c8565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361139c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139390611f68565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b158354683836040518363ffffffff1660e01b81526004016113f7929190612523565b600060405180830381600087803b15801561141157600080fd5b505af1158015611425573d6000803e3d6000fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036114bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b390611f68565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c12e806334836040518363ffffffff1660e01b8152600401611516919061254c565b6000604051808303818588803b15801561152f57600080fd5b505af1158015611543573d6000803e3d6000fd5b505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036115db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d290611f68565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d50095846040518163ffffffff1660e01b8152600401602060405180830381865afa158015611646573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166a9190612437565b905090565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036116fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f590611f68565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eaf5d9dc868686866040518563ffffffff1660e01b81526004016117609493929190612567565b6000604051808303816000875af115801561177f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906117a891906123ee565b9050806040015160058111156117c1576117c06121f0565b5b81600001517fefe93f21a3369f1228a2589883bc377a76d7335daddc712853688de4617f82ab83602001516040516117f991906122c8565b60405180910390a35050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118478261181c565b9050919050565b6118578161183c565b811461186257600080fd5b50565b6000813590506118748161184e565b92915050565b6000602082840312156118905761188f611812565b5b600061189e84828501611865565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118fa826118b1565b810181811067ffffffffffffffff82111715611919576119186118c2565b5b80604052505050565b600061192c611808565b905061193882826118f1565b919050565b600067ffffffffffffffff821115611958576119576118c2565b5b611961826118b1565b9050602081019050919050565b82818337600083830152505050565b600061199061198b8461193d565b611922565b9050828152602081018484840111156119ac576119ab6118ac565b5b6119b784828561196e565b509392505050565b600082601f8301126119d4576119d36118a7565b5b81356119e484826020860161197d565b91505092915050565b6000819050919050565b611a00816119ed565b8114611a0b57600080fd5b50565b600081359050611a1d816119f7565b92915050565b60008060408385031215611a3a57611a39611812565b5b600083013567ffffffffffffffff811115611a5857611a57611817565b5b611a64858286016119bf565b9250506020611a7585828601611a0e565b9150509250929050565b611a88816119ed565b82525050565b6000602082019050611aa36000830184611a7f565b92915050565b60048110611ab657600080fd5b50565b600081359050611ac881611aa9565b92915050565b600080600080600060a08688031215611aea57611ae9611812565b5b600086013567ffffffffffffffff811115611b0857611b07611817565b5b611b14888289016119bf565b955050602086013567ffffffffffffffff811115611b3557611b34611817565b5b611b41888289016119bf565b9450506040611b5288828901611ab9565b9350506060611b6388828901611a0e565b9250506080611b7488828901611865565b9150509295509295909350565b611b8a8161183c565b82525050565b6000602082019050611ba56000830184611b81565b92915050565b600060208284031215611bc157611bc0611812565b5b600082013567ffffffffffffffff811115611bdf57611bde611817565b5b611beb848285016119bf565b91505092915050565b60048110611c0157600080fd5b50565b600081359050611c1381611bf4565b92915050565b60008060408385031215611c3057611c2f611812565b5b600083013567ffffffffffffffff811115611c4e57611c4d611817565b5b611c5a858286016119bf565b9250506020611c6b85828601611c04565b9150509250929050565b60008115159050919050565b611c8a81611c75565b8114611c9557600080fd5b50565b600081359050611ca781611c81565b92915050565b60008060408385031215611cc457611cc3611812565b5b6000611cd285828601611865565b9250506020611ce385828601611c98565b9150509250929050565b600061ffff82169050919050565b611d0481611ced565b8114611d0f57600080fd5b50565b600081359050611d2181611cfb565b92915050565b60008060408385031215611d3e57611d3d611812565b5b6000611d4c85828601611865565b9250506020611d5d85828601611d12565b9150509250929050565b600060208284031215611d7d57611d7c611812565b5b6000611d8b84828501611d12565b91505092915050565b60008060008060808587031215611dae57611dad611812565b5b600085013567ffffffffffffffff811115611dcc57611dcb611817565b5b611dd8878288016119bf565b945050602085013567ffffffffffffffff811115611df957611df8611817565b5b611e05878288016119bf565b9350506040611e1687828801611a0e565b9250506060611e2787828801611865565b91505092959194509250565b600082825260208201905092915050565b7f596f7520646f206e6f742068617665207065726d697373696f6e000000000000600082015250565b6000611e7a601a83611e33565b9150611e8582611e44565b602082019050919050565b60006020820190508181036000830152611ea981611e6d565b9050919050565b7f496e76616c642061646472657373000000000000000000000000000000000000600082015250565b6000611ee6600e83611e33565b9150611ef182611eb0565b602082019050919050565b60006020820190508181036000830152611f1581611ed9565b9050919050565b7f596f75206d757374207570677261646520666972737400000000000000000000600082015250565b6000611f52601683611e33565b9150611f5d82611f1c565b602082019050919050565b60006020820190508181036000830152611f8181611f45565b9050919050565b600081519050919050565b60005b83811015611fb1578082015181840152602081019050611f96565b60008484015250505050565b6000611fc882611f88565b611fd28185611e33565b9350611fe2818560208601611f93565b611feb816118b1565b840191505092915050565b600060408201905081810360008301526120108185611fbd565b905061201f6020830184611a7f565b9392505050565b600080fd5b600080fd5b60008151905061203f8161184e565b92915050565b600081519050612054816119f7565b92915050565b600061206d6120688461193d565b611922565b905082815260208101848484011115612089576120886118ac565b5b612094848285611f93565b509392505050565b600082601f8301126120b1576120b06118a7565b5b81516120c184826020860161205a565b91505092915050565b6000606082840312156120e0576120df612026565b5b6120ea6060611922565b905060006120fa84828501612030565b600083015250602061210e84828501612045565b602083015250604082015167ffffffffffffffff8111156121325761213161202b565b5b61213e8482850161209c565b60408301525092915050565b6000602082840312156121605761215f611812565b5b600082015167ffffffffffffffff81111561217e5761217d611817565b5b61218a848285016120ca565b91505092915050565b60006040820190506121a86000830185611b81565b81810360208301526121ba8184611fbd565b90509392505050565b6000602082840312156121d9576121d8611812565b5b60006121e784828501612045565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106122305761222f6121f0565b5b50565b60008190506122418261221f565b919050565b600061225182612233565b9050919050565b61226181612246565b82525050565b600060a08201905081810360008301526122818188611fbd565b905081810360208301526122958187611fbd565b90506122a46040830186612258565b6122b16060830185611a7f565b6122be6080830184611b81565b9695505050505050565b600060208201905081810360008301526122e28184611fbd565b905092915050565b6000819050919050565b6122fd816122ea565b811461230857600080fd5b50565b60008151905061231a816122f4565b92915050565b6006811061232d57600080fd5b50565b60008151905061233f81612320565b92915050565b60008151905061235481611aa9565b92915050565b6000608082840312156123705761236f612026565b5b61237a6080611922565b9050600061238a8482850161230b565b600083015250602082015167ffffffffffffffff8111156123ae576123ad61202b565b5b6123ba8482850161209c565b60208301525060406123ce84828501612330565b60408301525060606123e284828501612345565b60608301525092915050565b60006020828403121561240457612403611812565b5b600082015167ffffffffffffffff81111561242257612421611817565b5b61242e8482850161235a565b91505092915050565b60006020828403121561244d5761244c611812565b5b600061245b84828501612030565b91505092915050565b60048110612475576124746121f0565b5b50565b600081905061248682612464565b919050565b600061249682612478565b9050919050565b6124a68161248b565b82525050565b600060408201905081810360008301526124c68185611fbd565b90506124d5602083018461249d565b9392505050565b6124e581611c75565b82525050565b60006040820190506125006000830185611b81565b61250d60208301846124dc565b9392505050565b61251d81611ced565b82525050565b60006040820190506125386000830185611b81565b6125456020830184612514565b9392505050565b60006020820190506125616000830184612514565b92915050565b600060808201905081810360008301526125818187611fbd565b905081810360208301526125958186611fbd565b90506125a46040830185611a7f565b6125b16060830184611b81565b9594505050505056fea2646970667358221220561975356e9787275c09dd7b7d0592c35eaed8ffe6f78820b1b4c7902d2564de64736f6c634300081c0033";

type CondominiumAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CondominiumAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CondominiumAdapter__factory extends ContractFactory {
  constructor(...args: CondominiumAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CondominiumAdapter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CondominiumAdapter__factory {
    return super.connect(runner) as CondominiumAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CondominiumAdapterInterface {
    return new Interface(_abi) as CondominiumAdapterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CondominiumAdapter {
    return new Contract(address, _abi, runner) as unknown as CondominiumAdapter;
  }
}
