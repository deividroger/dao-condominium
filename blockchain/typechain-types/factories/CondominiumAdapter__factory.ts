/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  CondominiumAdapter,
  CondominiumAdapterInterface,
} from "../CondominiumAdapter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "manager",
        type: "address",
      },
    ],
    name: "ManagerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "QuotaChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "topicId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: true,
        internalType: "enum CondominiumLib.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "TopicChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "topic",
        type: "string",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resident",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "residenceId",
        type: "uint16",
      },
    ],
    name: "addResident",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "enum CondominiumLib.Category",
        name: "category",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "responsible",
        type: "address",
      },
    ],
    name: "addTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "closeVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "topicToEdit",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "responsible",
        type: "address",
      },
    ],
    name: "editTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getImplAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "openVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "residenseId",
        type: "uint16",
      },
    ],
    name: "payQuota",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resident",
        type: "address",
      },
    ],
    name: "removeResident",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "removeTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resident",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isEntering",
        type: "bool",
      },
    ],
    name: "setCounselor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "topicTitle",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "enum CondominiumLib.Options",
        name: "option",
        type: "uint8",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805161233c6100666000396000818161031901526109da015261233c6000f3fe6080604052600436106100dd5760003560e01c80638fc5dad81161007f5780639e1bf985116100595780639e1bf98514610280578063b1583546146102a9578063c12e8063146102d2578063eaf5d9dc146102ee576100dd565b80638fc5dad81461020557806390ca27f31461022e57806396fa1def14610257576100dd565b8063597de987116100bb578063597de9871461015d5780637311ad81146101865780637b57ee49146101b15780638da5cb5b146101da576100dd565b80630900f010146100e257806312cb70c71461010b57806343b8c6b114610134575b600080fd5b3480156100ee57600080fd5b50610109600480360381019061010491906115c6565b610317565b005b34801561011757600080fd5b50610132600480360381019061012d919061176f565b610457565b005b34801561014057600080fd5b5061015b600480360381019061015691906117f0565b6105d9565b005b34801561016957600080fd5b50610184600480360381019061017f91906115c6565b610702565b005b34801561019257600080fd5b5061019b61081f565b6040516101a891906118b2565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d391906118cd565b610848565b005b3480156101e657600080fd5b506101ef6109d8565b6040516101fc91906118b2565b60405180910390f35b34801561021157600080fd5b5061022c600480360381019061022791906118cd565b6109fc565b005b34801561023a57600080fd5b506102556004803603810190610250919061193b565b610dad565b005b34801561026357600080fd5b5061027e600480360381019061027991906119cf565b610ecd565b005b34801561028c57600080fd5b506102a760048036038101906102a291906118cd565b610fed565b005b3480156102b557600080fd5b506102d060048036038101906102cb9190611a49565b61117d565b005b6102ec60048036038101906102e79190611a89565b61129d565b005b3480156102fa57600080fd5b5061031560048036038101906103109190611ab6565b6113bb565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c90611bb2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040b90611c1e565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dd90611c8a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312cb70c784846040518363ffffffff1660e01b8152600401610544929190611d27565b6000604051808303816000875af1158015610563573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061058c9190611e7b565b905080602001517feb10b79f28ae0b520cb7ee8e40115f547bfac852d7167a55d9ae8e028ee23a11826000015183604001516040516105cc929190611ec4565b60405180910390a2505050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f90611c8a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343b8c6b186868686866040518663ffffffff1660e01b81526004016106c9959493929190611f6b565b600060405180830381600087803b1580156106e357600080fd5b505af11580156106f7573d6000803e3d6000fd5b505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890611c8a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663597de987826040518263ffffffff1660e01b81526004016107ea91906118b2565b600060405180830381600087803b15801561080457600080fd5b505af1158015610818573d6000803e3d6000fd5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce90611c8a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b57ee49836040518263ffffffff1660e01b81526004016109339190611fcc565b6000604051808303816000875af1158015610952573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061097b91906120f2565b90508060400151600581111561099457610993611ef4565b5b81600001517fefe93f21a3369f1228a2589883bc377a76d7335daddc712853688de4617f82ab83602001516040516109cc9190611fcc565b60405180910390a35050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290611c8a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638fc5dad8836040518263ffffffff1660e01b8152600401610ae79190611fcc565b6000604051808303816000875af1158015610b06573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b2f91906120f2565b905080604001516005811115610b4857610b47611ef4565b5b81600001517fefe93f21a3369f1228a2589883bc377a76d7335daddc712853688de4617f82ab8360200151604051610b809190611fcc565b60405180910390a360026005811115610b9c57610b9b611ef4565b5b81604001516005811115610bb357610bb2611ef4565b5b03610da957600380811115610bcb57610bca611ef4565b5b81606001516003811115610be257610be1611ef4565b5b03610cb1577f198db6e425fb8aafd1823c6ca50be2d51e5764571a5ae0f0f21c6812e45def0b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d50095846040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c97919061213b565b604051610ca491906118b2565b60405180910390a1610da8565b60026003811115610cc557610cc4611ef4565b5b81606001516003811115610cdc57610cdb611ef4565b5b03610da7577f274a3b0d5142ec9fc4e77bd3ffc173b4e7c6c64eca73b31a6c6906b184257e7e60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631df8ba776040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d919190612168565b604051610d9e9190612195565b60405180910390a15b5b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610e3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3390611c8a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166390ca27f383836040518363ffffffff1660e01b8152600401610e979291906121f8565b600060405180830381600087803b158015610eb157600080fd5b505af1158015610ec5573d6000803e3d6000fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610f5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5390611c8a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396fa1def83836040518363ffffffff1660e01b8152600401610fb7929190612237565b600060405180830381600087803b158015610fd157600080fd5b505af1158015610fe5573d6000803e3d6000fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361107c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107390611c8a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639e1bf985836040518263ffffffff1660e01b81526004016110d89190611fcc565b6000604051808303816000875af11580156110f7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061112091906120f2565b90508060400151600581111561113957611138611ef4565b5b81600001517fefe93f21a3369f1228a2589883bc377a76d7335daddc712853688de4617f82ab83602001516040516111719190611fcc565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361120c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120390611c8a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b158354683836040518363ffffffff1660e01b815260040161126792919061226f565b600060405180830381600087803b15801561128157600080fd5b505af1158015611295573d6000803e3d6000fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361132c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132390611c8a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c12e806334836040518363ffffffff1660e01b81526004016113869190612298565b6000604051808303818588803b15801561139f57600080fd5b505af11580156113b3573d6000803e3d6000fd5b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361144a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144190611c8a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eaf5d9dc868686866040518563ffffffff1660e01b81526004016114ac94939291906122b3565b6000604051808303816000875af11580156114cb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906114f491906120f2565b90508060400151600581111561150d5761150c611ef4565b5b81600001517fefe93f21a3369f1228a2589883bc377a76d7335daddc712853688de4617f82ab83602001516040516115459190611fcc565b60405180910390a35050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061159382611568565b9050919050565b6115a381611588565b81146115ae57600080fd5b50565b6000813590506115c08161159a565b92915050565b6000602082840312156115dc576115db61155e565b5b60006115ea848285016115b1565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611646826115fd565b810181811067ffffffffffffffff821117156116655761166461160e565b5b80604052505050565b6000611678611554565b9050611684828261163d565b919050565b600067ffffffffffffffff8211156116a4576116a361160e565b5b6116ad826115fd565b9050602081019050919050565b82818337600083830152505050565b60006116dc6116d784611689565b61166e565b9050828152602081018484840111156116f8576116f76115f8565b5b6117038482856116ba565b509392505050565b600082601f8301126117205761171f6115f3565b5b81356117308482602086016116c9565b91505092915050565b6000819050919050565b61174c81611739565b811461175757600080fd5b50565b60008135905061176981611743565b92915050565b600080604083850312156117865761178561155e565b5b600083013567ffffffffffffffff8111156117a4576117a3611563565b5b6117b08582860161170b565b92505060206117c18582860161175a565b9150509250929050565b600481106117d857600080fd5b50565b6000813590506117ea816117cb565b92915050565b600080600080600060a0868803121561180c5761180b61155e565b5b600086013567ffffffffffffffff81111561182a57611829611563565b5b6118368882890161170b565b955050602086013567ffffffffffffffff81111561185757611856611563565b5b6118638882890161170b565b9450506040611874888289016117db565b93505060606118858882890161175a565b9250506080611896888289016115b1565b9150509295509295909350565b6118ac81611588565b82525050565b60006020820190506118c760008301846118a3565b92915050565b6000602082840312156118e3576118e261155e565b5b600082013567ffffffffffffffff81111561190157611900611563565b5b61190d8482850161170b565b91505092915050565b6004811061192357600080fd5b50565b60008135905061193581611916565b92915050565b600080604083850312156119525761195161155e565b5b600083013567ffffffffffffffff8111156119705761196f611563565b5b61197c8582860161170b565b925050602061198d85828601611926565b9150509250929050565b60008115159050919050565b6119ac81611997565b81146119b757600080fd5b50565b6000813590506119c9816119a3565b92915050565b600080604083850312156119e6576119e561155e565b5b60006119f4858286016115b1565b9250506020611a05858286016119ba565b9150509250929050565b600061ffff82169050919050565b611a2681611a0f565b8114611a3157600080fd5b50565b600081359050611a4381611a1d565b92915050565b60008060408385031215611a6057611a5f61155e565b5b6000611a6e858286016115b1565b9250506020611a7f85828601611a34565b9150509250929050565b600060208284031215611a9f57611a9e61155e565b5b6000611aad84828501611a34565b91505092915050565b60008060008060808587031215611ad057611acf61155e565b5b600085013567ffffffffffffffff811115611aee57611aed611563565b5b611afa8782880161170b565b945050602085013567ffffffffffffffff811115611b1b57611b1a611563565b5b611b278782880161170b565b9350506040611b388782880161175a565b9250506060611b49878288016115b1565b91505092959194509250565b600082825260208201905092915050565b7f596f7520646f206e6f742068617665207065726d697373696f6e000000000000600082015250565b6000611b9c601a83611b55565b9150611ba782611b66565b602082019050919050565b60006020820190508181036000830152611bcb81611b8f565b9050919050565b7f496e76616c642061646472657373000000000000000000000000000000000000600082015250565b6000611c08600e83611b55565b9150611c1382611bd2565b602082019050919050565b60006020820190508181036000830152611c3781611bfb565b9050919050565b7f596f75206d757374207570677261646520666972737400000000000000000000600082015250565b6000611c74601683611b55565b9150611c7f82611c3e565b602082019050919050565b60006020820190508181036000830152611ca381611c67565b9050919050565b600081519050919050565b60005b83811015611cd3578082015181840152602081019050611cb8565b60008484015250505050565b6000611cea82611caa565b611cf48185611b55565b9350611d04818560208601611cb5565b611d0d816115fd565b840191505092915050565b611d2181611739565b82525050565b60006040820190508181036000830152611d418185611cdf565b9050611d506020830184611d18565b9392505050565b600080fd5b600080fd5b600081519050611d708161159a565b92915050565b600081519050611d8581611743565b92915050565b6000611d9e611d9984611689565b61166e565b905082815260208101848484011115611dba57611db96115f8565b5b611dc5848285611cb5565b509392505050565b600082601f830112611de257611de16115f3565b5b8151611df2848260208601611d8b565b91505092915050565b600060608284031215611e1157611e10611d57565b5b611e1b606061166e565b90506000611e2b84828501611d61565b6000830152506020611e3f84828501611d76565b602083015250604082015167ffffffffffffffff811115611e6357611e62611d5c565b5b611e6f84828501611dcd565b60408301525092915050565b600060208284031215611e9157611e9061155e565b5b600082015167ffffffffffffffff811115611eaf57611eae611563565b5b611ebb84828501611dfb565b91505092915050565b6000604082019050611ed960008301856118a3565b8181036020830152611eeb8184611cdf565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611f3457611f33611ef4565b5b50565b6000819050611f4582611f23565b919050565b6000611f5582611f37565b9050919050565b611f6581611f4a565b82525050565b600060a0820190508181036000830152611f858188611cdf565b90508181036020830152611f998187611cdf565b9050611fa86040830186611f5c565b611fb56060830185611d18565b611fc260808301846118a3565b9695505050505050565b60006020820190508181036000830152611fe68184611cdf565b905092915050565b6000819050919050565b61200181611fee565b811461200c57600080fd5b50565b60008151905061201e81611ff8565b92915050565b6006811061203157600080fd5b50565b60008151905061204381612024565b92915050565b600081519050612058816117cb565b92915050565b60006080828403121561207457612073611d57565b5b61207e608061166e565b9050600061208e8482850161200f565b600083015250602082015167ffffffffffffffff8111156120b2576120b1611d5c565b5b6120be84828501611dcd565b60208301525060406120d284828501612034565b60408301525060606120e684828501612049565b60608301525092915050565b6000602082840312156121085761210761155e565b5b600082015167ffffffffffffffff81111561212657612125611563565b5b6121328482850161205e565b91505092915050565b6000602082840312156121515761215061155e565b5b600061215f84828501611d61565b91505092915050565b60006020828403121561217e5761217d61155e565b5b600061218c84828501611d76565b91505092915050565b60006020820190506121aa6000830184611d18565b92915050565b600481106121c1576121c0611ef4565b5b50565b60008190506121d2826121b0565b919050565b60006121e2826121c4565b9050919050565b6121f2816121d7565b82525050565b600060408201905081810360008301526122128185611cdf565b905061222160208301846121e9565b9392505050565b61223181611997565b82525050565b600060408201905061224c60008301856118a3565b6122596020830184612228565b9392505050565b61226981611a0f565b82525050565b600060408201905061228460008301856118a3565b6122916020830184612260565b9392505050565b60006020820190506122ad6000830184612260565b92915050565b600060808201905081810360008301526122cd8187611cdf565b905081810360208301526122e18186611cdf565b90506122f06040830185611d18565b6122fd60608301846118a3565b9594505050505056fea2646970667358221220f571634046f3a7b81b33e81c43123f9fa649b936a57010b7d344d5bd301bf12a64736f6c634300081c0033";

type CondominiumAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CondominiumAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CondominiumAdapter__factory extends ContractFactory {
  constructor(...args: CondominiumAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CondominiumAdapter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CondominiumAdapter__factory {
    return super.connect(runner) as CondominiumAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CondominiumAdapterInterface {
    return new Interface(_abi) as CondominiumAdapterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CondominiumAdapter {
    return new Contract(address, _abi, runner) as unknown as CondominiumAdapter;
  }
}
