/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  CondominiumAdapter,
  CondominiumAdapterInterface,
} from "../CondominiumAdapter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "manager",
        type: "address",
      },
    ],
    name: "ManagerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "QuotaChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "topicId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: true,
        internalType: "enum CondominiumLib.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "TopicChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "topic",
        type: "string",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resident",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "residenceId",
        type: "uint16",
      },
    ],
    name: "addResident",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "enum CondominiumLib.Category",
        name: "category",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "responsible",
        type: "address",
      },
    ],
    name: "addTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "closeVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "topicToEdit",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "responsible",
        type: "address",
      },
    ],
    name: "editTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getImplAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getQuota",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resident",
        type: "address",
      },
    ],
    name: "getResident",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "residence",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "isCounselor",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isManager",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "nextPayment",
            type: "uint256",
          },
        ],
        internalType: "struct CondominiumLib.Resident",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "page",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pageSize",
        type: "uint256",
      },
    ],
    name: "getResidents",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "wallet",
                type: "address",
              },
              {
                internalType: "uint16",
                name: "residence",
                type: "uint16",
              },
              {
                internalType: "bool",
                name: "isCounselor",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isManager",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "nextPayment",
                type: "uint256",
              },
            ],
            internalType: "struct CondominiumLib.Resident[]",
            name: "residents",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "total",
            type: "uint256",
          },
        ],
        internalType: "struct CondominiumLib.ResidentPage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "getTopic",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "enum CondominiumLib.Category",
            name: "category",
            type: "uint8",
          },
          {
            internalType: "enum CondominiumLib.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "responsible",
            type: "address",
          },
        ],
        internalType: "struct CondominiumLib.Topic",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "page",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pageSize",
        type: "uint256",
      },
    ],
    name: "getTopics",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "title",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
              {
                internalType: "enum CondominiumLib.Category",
                name: "category",
                type: "uint8",
              },
              {
                internalType: "enum CondominiumLib.Status",
                name: "status",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "createdDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "responsible",
                type: "address",
              },
            ],
            internalType: "struct CondominiumLib.Topic[]",
            name: "topics",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "total",
            type: "uint256",
          },
        ],
        internalType: "struct CondominiumLib.TopicPage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "topicTitle",
        type: "string",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "resident",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "residence",
            type: "uint16",
          },
          {
            internalType: "enum CondominiumLib.Options",
            name: "option",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct CondominiumLib.Vote[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "openVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "residenseId",
        type: "uint16",
      },
    ],
    name: "payQuota",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resident",
        type: "address",
      },
    ],
    name: "removeResident",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "removeTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resident",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isEntering",
        type: "bool",
      },
    ],
    name: "setCounselor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "topicTitle",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "enum CondominiumLib.Options",
        name: "option",
        type: "uint8",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b503360805260805161267e610036600039600081816103310152610473015261267e6000f3fe60806040526004361061016a5760003560e01c8063805265e5116100cb5780639e1bf9851161007f578063c12e806311610059578063c12e806314610420578063d500958414610433578063eaf5d9dc1461044857600080fd5b80639e1bf985146103b3578063a7107f02146103d3578063b15835461461040057600080fd5b80638fc5dad8116100b05780638fc5dad81461035357806390ca27f31461037357806396fa1def1461039357600080fd5b8063805265e5146102f25780638da5cb5b1461031f57600080fd5b806356ea46d9116101225780637311ad81116101075780637311ad81146102735780637932938b146102a55780637b57ee49146102d257600080fd5b806356ea46d914610226578063597de9871461025357600080fd5b80631df8ba77116101535780631df8ba77146101b157806343b8c6b1146101d9578063474502d8146101f957600080fd5b80630900f0101461016f57806312cb70c714610191575b600080fd5b34801561017b57600080fd5b5061018f61018a36600461173c565b610468565b005b34801561019d57600080fd5b5061018f6101ac366004611895565b610575565b3480156101bd57600080fd5b506101c661069b565b6040519081526020015b60405180910390f35b3480156101e557600080fd5b5061018f6101f43660046118e7565b61075c565b34801561020557600080fd5b50610219610214366004611981565b61082d565b6040516101d09190611af6565b34801561023257600080fd5b50610246610241366004611b09565b61095f565b6040516101d09190611b2b565b34801561025f57600080fd5b5061018f61026e36600461173c565b610a54565b34801561027f57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016101d0565b3480156102b157600080fd5b506102c56102c0366004611b09565b610b11565b6040516101d09190611ba7565b3480156102de57600080fd5b5061018f6102ed366004611981565b610bfd565b3480156102fe57600080fd5b5061031261030d366004611981565b610d2d565b6040516101d09190611c4a565b34801561032b57600080fd5b5061028d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561035f57600080fd5b5061018f61036e366004611981565b610e04565b34801561037f57600080fd5b5061018f61038e366004611cc6565b611108565b34801561039f57600080fd5b5061018f6103ae366004611d26565b6111cf565b3480156103bf57600080fd5b5061018f6103ce366004611981565b611268565b3480156103df57600080fd5b506103f36103ee36600461173c565b6112f8565b6040516101d09190611d54565b34801561040c57600080fd5b5061018f61041b366004611dae565b6113ee565b61018f61042e366004611ddc565b611489565b34801561043f57600080fd5b5061028d611532565b34801561045457600080fd5b5061018f610463366004611df9565b6115ee565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104e55760405162461bcd60e51b815260206004820152601a60248201527f596f7520646f206e6f742068617665207065726d697373696f6e00000000000060448201526064015b60405180910390fd5b6001600160a01b03811661053b5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c64206164647265737300000000000000000000000000000000000060448201526064016104dc565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b03166105bb5760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b600080546040517f12cb70c70000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906312cb70c7906106079086908690600401611e7e565b6000604051808303816000875af1158015610626573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261064e9190810190611ef0565b905080602001517feb10b79f28ae0b520cb7ee8e40115f547bfac852d7167a55d9ae8e028ee23a118260000151836040015160405161068e929190611f9c565b60405180910390a2505050565b600080546001600160a01b03166106e25760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b60008054906101000a90046001600160a01b03166001600160a01b0316631df8ba776040518163ffffffff1660e01b8152600401602060405180830381865afa158015610733573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107579190611fbe565b905090565b6000546001600160a01b03166107a25760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b6000546040517f43b8c6b10000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906343b8c6b1906107f39088908890889088908890600401611fd7565b600060405180830381600087803b15801561080d57600080fd5b505af1158015610821573d6000803e3d6000fd5b505050505b5050505050565b61088360408051610120810182526060808252602082015290810160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b6000546001600160a01b03166108c95760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b6000546040517f474502d80000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063474502d89061091290859060040161202d565b600060405180830381865afa15801561092f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610957919081019061212c565b90505b919050565b6040805180820190915260608152600060208201526000546001600160a01b03166109ba5760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b6000546040517f56ea46d900000000000000000000000000000000000000000000000000000000815260048101859052602481018490526001600160a01b03909116906356ea46d990604401600060405180830381865afa158015610a23573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a4b9190810190612185565b90505b92915050565b6000546001600160a01b0316610a9a5760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b6000546040517f597de9870000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301529091169063597de98790602401600060405180830381600087803b158015610afa57600080fd5b505af1158015610826573d6000803e3d6000fd5b50565b6040805180820190915260608152600060208201526000546001600160a01b0316610b6c5760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b6000546040517f7932938b00000000000000000000000000000000000000000000000000000000815260048101859052602481018490526001600160a01b0390911690637932938b90604401600060405180830381865afa158015610bd5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a4b9190810190612310565b6000546001600160a01b0316610c435760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b600080546040517f7b57ee490000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690637b57ee4990610c8d90859060040161202d565b6000604051808303816000875af1158015610cac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cd491908101906123f0565b905080604001516005811115610cec57610cec611a0e565b815160208301516040517fefe93f21a3369f1228a2589883bc377a76d7335daddc712853688de4617f82ab91610d219161202d565b60405180910390a35050565b6000546060906001600160a01b0316610d765760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b6000546040517f805265e50000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063805265e590610dbf90859060040161202d565b600060405180830381865afa158015610ddc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109579190810190612493565b6000546001600160a01b0316610e4a5760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b600080546040517f8fc5dad80000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690638fc5dad890610e9490859060040161202d565b6000604051808303816000875af1158015610eb3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610edb91908101906123f0565b905080604001516005811115610ef357610ef3611a0e565b815160208301516040517fefe93f21a3369f1228a2589883bc377a76d7335daddc712853688de4617f82ab91610f289161202d565b60405180910390a3600281604001516005811115610f4857610f48611a0e565b0361110457600381606001516003811115610f6557610f65611a0e565b0361102f57600054604080517fd500958400000000000000000000000000000000000000000000000000000000815290517f198db6e425fb8aafd1823c6ca50be2d51e5764571a5ae0f0f21c6812e45def0b926001600160a01b03169163d50095849160048083019260209291908290030181865afa158015610fec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611010919061257e565b6040516001600160a01b03909116815260200160405180910390a15050565b60028160600151600381111561104757611047611a0e565b0361110457600054604080517f1df8ba7700000000000000000000000000000000000000000000000000000000815290517f274a3b0d5142ec9fc4e77bd3ffc173b4e7c6c64eca73b31a6c6906b184257e7e926001600160a01b031691631df8ba779160048083019260209291908290030181865afa1580156110ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f29190611fbe565b60405190815260200160405180910390a15b5050565b6000546001600160a01b031661114e5760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b6000546040517f90ca27f30000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906390ca27f390611199908590859060040161259b565b600060405180830381600087803b1580156111b357600080fd5b505af11580156111c7573d6000803e3d6000fd5b505050505050565b6000546001600160a01b03166112155760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b6000546040517f96fa1def0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301528315156024830152909116906396fa1def90604401611199565b6000546001600160a01b03166112ae5760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b600080546040517f9e1bf9850000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690639e1bf98590610c8d90859060040161202d565b6040805160a081018252600080825260208201819052918101829052606081018290526080810182905290546001600160a01b03166113675760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b6000546040517fa7107f020000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301529091169063a7107f029060240160a060405180830381865afa1580156113ca573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095791906125c6565b6000546001600160a01b03166114345760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b6000546040517fb15835460000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015261ffff841660248301529091169063b158354690604401611199565b6000546001600160a01b03166114cf5760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b6000546040517fc12e806300000000000000000000000000000000000000000000000000000000815261ffff831660048201526001600160a01b039091169063c12e80639034906024016000604051808303818588803b1580156111b357600080fd5b600080546001600160a01b03166115795760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b60008054906101000a90046001600160a01b03166001600160a01b031663d50095846040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610757919061257e565b6000546001600160a01b03166116345760405162461bcd60e51b8152602060048201526016602482015260008051602061262983398151915260448201526064016104dc565b600080546040517feaf5d9dc0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063eaf5d9dc906116849088908890889088906004016125e2565b6000604051808303816000875af11580156116a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116cb91908101906123f0565b9050806040015160058111156116e3576116e3611a0e565b815160208301516040517fefe93f21a3369f1228a2589883bc377a76d7335daddc712853688de4617f82ab916117189161202d565b60405180910390a35050505050565b6001600160a01b0381168114610b0e57600080fd5b60006020828403121561174e57600080fd5b813561175981611727565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff8111828210171561179a5761179a611760565b60405290565b6040805190810167ffffffffffffffff8111828210171561179a5761179a611760565b6040516080810167ffffffffffffffff8111828210171561179a5761179a611760565b604051601f8201601f1916810167ffffffffffffffff8111828210171561180f5761180f611760565b604052919050565b600067ffffffffffffffff82111561183157611831611760565b50601f01601f191660200190565b600082601f83011261185057600080fd5b813561186361185e82611817565b6117e6565b81815284602083860101111561187857600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156118a857600080fd5b823567ffffffffffffffff8111156118bf57600080fd5b6118cb8582860161183f565b95602094909401359450505050565b60048110610b0e57600080fd5b600080600080600060a086880312156118ff57600080fd5b853567ffffffffffffffff81111561191657600080fd5b6119228882890161183f565b955050602086013567ffffffffffffffff81111561193f57600080fd5b61194b8882890161183f565b945050604086013561195c816118da565b925060608601359150608086013561197381611727565b809150509295509295909350565b60006020828403121561199357600080fd5b813567ffffffffffffffff8111156119aa57600080fd5b6119b68482850161183f565b949350505050565b60005b838110156119d95781810151838201526020016119c1565b50506000910152565b600081518084526119fa8160208601602086016119be565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60048110610b0e57610b0e611a0e565b611a3d81611a24565b9052565b60068110611a3d57611a3d611a0e565b600081516101208452611a686101208501826119e2565b905060208301518482036020860152611a8182826119e2565b9150506040830151611a966040860182611a34565b506060830151611aa96060860182611a41565b506080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100830151611aee6101008601826001600160a01b03169052565b509392505050565b602081526000610a4b6020830184611a51565b60008060408385031215611b1c57600080fd5b50508035926020909101359150565b6020815260006060820183516040602085015281815180845260808601915060808160051b870101935060208301925060005b81811015611b8f57607f19878603018352611b7a858551611a51565b94506020938401939290920191600101611b5e565b50505050602084015160408401528091505092915050565b602080825282516040838301528051606084018190526000929190910190829060808501905b80831015611c3357611c1c8285516001600160a01b03815116825261ffff6020820151166020830152604081015115156040830152606081015115156060830152608081015160808301525050565b60a082019150602084019350600183019250611bcd565b506020860151604086015280935050505092915050565b602080825282518282018190526000918401906040840190835b81811015611cbb5783516001600160a01b03815116845261ffff60208201511660208501526040810151611c9781611a24565b60408501526060908101519084015260209390930192608090920191600101611c64565b509095945050505050565b60008060408385031215611cd957600080fd5b823567ffffffffffffffff811115611cf057600080fd5b611cfc8582860161183f565b9250506020830135611d0d816118da565b809150509250929050565b8015158114610b0e57600080fd5b60008060408385031215611d3957600080fd5b8235611d4481611727565b91506020830135611d0d81611d18565b60a08101610a4e82846001600160a01b03815116825261ffff6020820151166020830152604081015115156040830152606081015115156060830152608081015160808301525050565b61ffff81168114610b0e57600080fd5b60008060408385031215611dc157600080fd5b8235611dcc81611727565b91506020830135611d0d81611d9e565b600060208284031215611dee57600080fd5b813561175981611d9e565b60008060008060808587031215611e0f57600080fd5b843567ffffffffffffffff811115611e2657600080fd5b611e328782880161183f565b945050602085013567ffffffffffffffff811115611e4f57600080fd5b611e5b8782880161183f565b935050604085013591506060850135611e7381611727565b939692955090935050565b604081526000611e9160408301856119e2565b90508260208301529392505050565b805161095a81611727565b600082601f830112611ebc57600080fd5b8151611eca61185e82611817565b818152846020838601011115611edf57600080fd5b6119b68260208301602087016119be565b600060208284031215611f0257600080fd5b815167ffffffffffffffff811115611f1957600080fd5b820160608185031215611f2b57600080fd5b6040516060810167ffffffffffffffff81118282101715611f4e57611f4e611760565b6040528151611f5c81611727565b815260208281015190820152604082015167ffffffffffffffff811115611f8257600080fd5b611f8e86828501611eab565b604083015250949350505050565b6001600160a01b03831681526040602082015260006119b660408301846119e2565b600060208284031215611fd057600080fd5b5051919050565b60a081526000611fea60a08301886119e2565b8281036020840152611ffc81886119e2565b91505061200885611a24565b8460408301528360608301526001600160a01b03831660808301529695505050505050565b602081526000610a4b60208301846119e2565b805161095a816118da565b80516006811061095a57600080fd5b6000610120828403121561206d57600080fd5b612075611776565b9050815167ffffffffffffffff81111561208e57600080fd5b61209a84828501611eab565b825250602082015167ffffffffffffffff8111156120b757600080fd5b6120c384828501611eab565b6020830152506120d560408301612040565b60408201526120e66060830161204b565b60608201526080828101519082015260a0808301519082015260c0808301519082015260e080830151908201526121206101008301611ea0565b61010082015292915050565b60006020828403121561213e57600080fd5b815167ffffffffffffffff81111561215557600080fd5b6119b68482850161205a565b600067ffffffffffffffff82111561217b5761217b611760565b5060051b60200190565b60006020828403121561219757600080fd5b815167ffffffffffffffff8111156121ae57600080fd5b8201604081850312156121c057600080fd5b6121c86117a0565b815167ffffffffffffffff8111156121df57600080fd5b8201601f810186136121f057600080fd5b80516121fe61185e82612161565b8082825260208201915060208360051b85010192508883111561222057600080fd5b602084015b8381101561226257805167ffffffffffffffff81111561224457600080fd5b6122538b60208389010161205a565b84525060209283019201612225565b508452505050602091820151918101919091529392505050565b600060a0828403121561228e57600080fd5b60405160a0810167ffffffffffffffff811182821017156122b1576122b1611760565b806040525080915082516122c481611727565b815260208301516122d481611d9e565b602082015260408301516122e781611d18565b604082015260608301516122fa81611d18565b6060820152608092830151920191909152919050565b60006020828403121561232257600080fd5b815167ffffffffffffffff81111561233957600080fd5b82016040818503121561234b57600080fd5b6123536117a0565b815167ffffffffffffffff81111561236a57600080fd5b8201601f8101861361237b57600080fd5b805161238961185e82612161565b80828252602082019150602060a084028501019250888311156123ab57600080fd5b6020840193505b828410156123d7576123c4898561227c565b825260208201915060a0840193506123b2565b8452505050602091820151918101919091529392505050565b60006020828403121561240257600080fd5b815167ffffffffffffffff81111561241957600080fd5b82016080818503121561242b57600080fd5b6124336117c3565b81518152602082015167ffffffffffffffff81111561245157600080fd5b61245d86828501611eab565b60208301525061246f6040830161204b565b604082015260608201519150612484826118da565b60608101919091529392505050565b6000602082840312156124a557600080fd5b815167ffffffffffffffff8111156124bc57600080fd5b8201601f810184136124cd57600080fd5b80516124db61185e82612161565b8082825260208201915060208360071b8501019250868311156124fd57600080fd5b6020840193505b82841015612574576080848803121561251c57600080fd5b6125246117c3565b845161252f81611727565b8152602085015161253f81611d9e565b60208201526040850151612552816118da565b6040820152606085810151908201528252608090930192602090910190612504565b9695505050505050565b60006020828403121561259057600080fd5b815161175981611727565b6040815260006125ae60408301856119e2565b90506125b983611a24565b8260208301529392505050565b600060a082840312156125d857600080fd5b610a4b838361227c565b6080815260006125f560808301876119e2565b828103602084015261260781876119e2565b9150508360408301526001600160a01b03831660608301529594505050505056fe596f75206d757374207570677261646520666972737400000000000000000000a2646970667358221220fa6c0fb3d22bda539ee324fe6e0c796caa1adcda1e5a7586998df5dac2f894f364736f6c634300081c0033";

type CondominiumAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CondominiumAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CondominiumAdapter__factory extends ContractFactory {
  constructor(...args: CondominiumAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CondominiumAdapter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CondominiumAdapter__factory {
    return super.connect(runner) as CondominiumAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CondominiumAdapterInterface {
    return new Interface(_abi) as CondominiumAdapterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CondominiumAdapter {
    return new Contract(address, _abi, runner) as unknown as CondominiumAdapter;
  }
}
